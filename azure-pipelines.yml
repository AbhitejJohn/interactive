# CI and PR triggers
trigger:
  branches:
    include:
    - main
    - feature/*
    - hotfix/*
    - release/*
  paths:
    include:
    - '*'
    exclude:
    - '**/*.md'
    - .config/*
    - .devcontainer/*
    - .github/*
    - .vscode/*
    - assets/*
    - docs/*
    - images/*
    - .editorconfig
    - .gitignore
    - '*.txt'
    - '*.github-issues'

pr:
  branches:
    include:
    - main
    - feature/*
    - hotfix/*
    - release/*
  paths:
    include:
    - '*'
    exclude:
    - '**/*.md'
    - .config/*
    - .devcontainer/*
    - .github/*
    - .vscode/*
    - assets/*
    - docs/*
    - images/*
    - .editorconfig
    - .gitignore
    - '*.txt'
    - '*.github-issues'

# Scheduled trigger that will run at 8:00 AM every Monday and Wednesday
schedules:
- cron: "0 8 * * Mon"
  displayName: Weekly build for Localization Updates (Monday)
  branches:
    include:
    - main
- cron: "0 8 * * Wed"
  displayName: Weekly build for Localization Updates (Wednesday)
  branches:
    include:
    - main

# Variables
variables:
- template: /eng/templates/variables-template.yml@self
- template: /eng/common/templates-official/variables/pool-providers.yml@self

resources:
  repositories:
  - repository: 1esPipelines
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
    
extends:
  template: v1/1ES.Unofficial.PipelineTemplate.yml@1esPipelines
  parameters:
    sdl:
      enableAllTools: false
    stages:
    - stage: build
      displayName: Build and Test
      jobs:
      - ${{ if ne(variables['System.TeamProject'], 'public') }}:
        - template: /eng/common/templates/job/onelocbuild.yml@self
          parameters:
            MirrorRepo: interactive
            MirrorBranch: main
            SkipLocProjectJsonGeneration: true
            LclSource: lclFilesfromPackage
            LclPackageId: 'LCL-JUNO-PROD-INTERACTIVE'
            CreatePr: $(LocPRCreationEnabled)

      - template: /eng/common/templates/jobs/jobs.yml@self
        parameters:
          enableMicrobuild: true
          enablePublishBuildArtifacts: true
          enablePublishTestResults: true
          enablePublishBuildAssets: true
          enablePublishUsingPipelines: $(_PublishUsingPipelines)
          jobs:
          - job: Windows_NT
            pool:
              ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
                name: $(DncEngPublicBuildPool)
                demands: ImageOverride -equals 1es-windows-2022
              ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
                name: $(DncEngInternalBuildPool)
                demands: ImageOverride -equals 1es-windows-2022
            timeoutInMinutes: 200
            variables:
            # Enable signing for internal, non-PR builds
            - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
              - group: DotNet-Symbol-Server-Pats
              - name: _SignType
                value: Real
              - name: _BuildArgs
                value: /p:SignType=$(_SignType)
                      /p:DotNetSignType=$(_SignType)
                      /p:MicroBuild_SigningEnabled=true
                      /p:TeamName=$(_TeamName)
                      /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
                      /p:DotNetArtifactsCategory=$(_DotNetArtifactsCategory)
                      /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
                      /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
                      /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
                      /p:PublishToSymbolServer=true
            # else
            - ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
              - name: _SignType
                value: Test
              - name: _BuildArgs
                value: /p:SignType=$(_SignType)
            
            templateContext:
                  outputParentDirectory: $(Build.ArtifactStagingDirectory)
                  outputs:
                    - output: pipelineArtifact
                      displayName: 'Publish Test results and Blame dumps'
                      targetPath: '$(Build.ArtifactStagingDirectory)/artifacts/TestResults/$(_BuildConfig)'
                      artifactName: 'Windows_test_results_and_dumps'
                      publishLocation: Container
                      condition: always()
                    - output: pipelineArtifact
                      displayName: 'Publish VSCode extension artifacts'
                      targetPath: '$(Build.ArtifactStagingDirectory)\vscode'
                      artifactName: 'vscode'
                      publishLocation: Container
                    - output: buildArtifacts
                      displayName: 'Publish NPM package artifacts'
                      PathtoPublish: '$(Build.ArtifactStagingDirectory)/npm'
                      ArtifactName: 'npm'
                      publishLocation: Container
                    - output: pipelineArtifact
                      displayName: 'Publish packages to artifacts container'
                      targetPath: '$(Build.ArtifactStagingDirectory)/artifacts/packages/$(_BuildConfig)'
                      artifactName: 'packages'
                      publishLocation: Container

            steps:
            - checkout: self
              clean: true

            # Use common task group
            - template: /eng/templates/common-tasks.yml@self
              parameters:
                platform: windows

      - template: /eng/common/templates/jobs/jobs.yml@self
        parameters:
          enableMicrobuild: true
          enablePublishBuildArtifacts: true
          enablePublishTestResults: true
          enablePublishBuildAssets: false
          enablePublishUsingPipelines: false
          jobs:
          - job: Linux
            pool:
              ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
                name: $(DncEngPublicBuildPool)
                demands: ImageOverride -equals 1es-ubuntu-2204
              ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
                name: $(DncEngInternalBuildPool)
                demands: ImageOverride -equals 1es-ubuntu-2204
            timeoutInMinutes: 200
            templateContext:
              outputs:
                - output: pipelineArtifact
                  displayName: 'Publish Test results and Blame dumps'
                  condition: always()
                  targetPath: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)'
                  artifactName: 'Linux_test_results_and_dumps'
                  publishLocation: Container

            variables:
            # Enable signing for internal, non-PR builds
            - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
              - name: _SignType
                value: Test
              - name: _BuildArgs
                value: /p:SignType=$(_SignType)
                  /p:DotNetSignType=$(_SignType)
                  /p:TeamName=$(_TeamName)
                  /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
            # else
            - ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
              - name: _SignType
                value: Test
              - name: _BuildArgs
                value: /p:SignType=$(_SignType)

            steps:
            - checkout: self
              clean: true

            # Use common task group
            - template: /eng/templates/common-tasks.yml@self
              parameters:
                platform: linux

#---------------------------------------------------------------------------------------------------------------------#
#                                                    Post Build                                                       #
#---------------------------------------------------------------------------------------------------------------------#
    - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
      - template: /eng/templates/post-build-tasks.yml@self

#---------------------------------------------------------------------------------------------------------------------#
#                                                    NPM Publish                                                      #
#---------------------------------------------------------------------------------------------------------------------#
    - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
      - template: /eng/templates/npm-publish-tasks.yml@self
